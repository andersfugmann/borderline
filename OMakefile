# .PHONY: all install clean
NATIVE_ENABLED = true
BYTE_ENABLED = true

OCAMLFLAGS = -g -w @A-4-29-33-39-41-44-45-48 -bin-annot
USE_OCAMLFIND = true
CP = cp -f
MENHIR_ENABLED = true
MENHIR_FLAGS = --explain --infer
#--compile-errors ../src/parser.errors
OCAMLPACKS[] = unix str num oUnit batteries ipaddr

mkdir -p _build
vmount(-l, src, _build)

.PHONY: clean install unittest build tests test
clean:
    $(RM) -fr _build
    $(RM) -fr bin
    /usr/bin/find . -name \*~ -delete

dist-clean:
    git reset -f -d -x

dep:
    opam install core menhir


install: _build/borderline.opt _build/bl_configure.opt
    mkdir -p $(DESTDIR)/etc/default/
    mkdir -p $(DESTDIR)/etc/init.d/
    mkdir -p $(DESTDIR)/usr/local/bin
    make -C configuration install
    $(CP) _build/borderline.opt $(DESTDIR)/usr/local/bin/borderline
    $(CP) _build/bl_configure.opt $(DESTDIR)/usr/local/bin/bl_configure
    echo "MAIN=/etc/borderline/borderline.bl" > $(DESTDIR)/etc/default/borderline
    echo "DONT_START=1" >> $(DESTDIR)/etc/default/borderline
    $(CP) borderline.sh $(DESTDIR)/etc/init.d/

unittest: _build/unit_test.run
    _build/unit_test.run

.PHONY: tests
tests: _build/borderline.run
    cd tests; BORDERLINE=../_build/borderline.run ./test.sh

test: build nat.nft
    make -C configuration
    #$(RM) configuration/zones/wlan* configuration/zones/eth* configuration/zones/ext*
    #_build/bl_configure.opt --output configuration/zones --force
    echo "#!/usr/sbin/nft -f" > test.nft
    echo "flush ruleset" >> test.nft
    _build/borderline.opt configuration/borderline.bl | tee -a test.nft

build: _build/borderline.run _build/unit_test.run _build/bl_configure.run _build/borderline.opt _build/unit_test.opt _build/bl_configure.opt

.SUBDIRS: _build
  FILES[] =
	lexer
	parser
	frontend
	ir
	parse
	rule
	nftables
	chain
	ipset
	lexer
	parser
	validate
	common
	ipset
	optimize
	state
	zone
	icmp

  section:
      PROGRAM = borderline
      .DEFAULT: $(OCamlProgram $(PROGRAM), $(PROGRAM) $(FILES))

  section:
      PROGRAM = bl_configure
      .DEFAULT: $(OCamlProgram $(PROGRAM), $(PROGRAM))

  section:
      PROGRAM = unit_test
      .DEFAULT: $(OCamlProgram $(PROGRAM), $(PROGRAM) $(FILES))
