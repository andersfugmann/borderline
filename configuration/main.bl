# Copyright 2009 Anders Fugmann.
# Distributed under the GNU General Public License v3
#
# This file is part of Borderline - A Firewall Generator
#
# Borderline is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3 as
# published by the Free Software Foundation.
#
# Borderline is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Borderline.  If not, see <http://www.gnu.org/licenses/>.
import "./generic"
import "./zones"

# Packets from and to ext must not be a bogon.
process filter {
        rule {
             rule { state = related, established; } policy allow;

             # Bogons are only for "global" interfaces. All packets comming from, or destined to.
             # All zones with no network classifiers are per se global, and given that zone name?

             rule { source address != fe80::/64;
                    source address = bogon; } policy deny;
             rule { destination address != fe80::/64;
                    destination address = bogon; } policy deny;

             # This is no good. I need to allow this specificly for internal zones.
             rule { source address = fe80::/64;
                    destination address = fe80::/64;
                    icmptype = router-solicitation, router-advertisement, neighbor-solicitation, neighbor-advertisement, redirect;
                  } policy allow;
             rule { state = new;
                    rule { source address != fe80::/64;
                           source address = bogon; } policy deny;
                    rule { destination address != fe80::/64;
                           destination address = bogon; } policy deny;
                    rule { src zone = mars; } policy deny;
                    rule { dst zone = mars; } policy deny;
                    use common;
                    use zones;
              } policy deny;
              rule { state = invalid; } policy drop;
        } policy deny;
} policy deny

