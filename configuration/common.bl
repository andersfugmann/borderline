# Rules for all zones.
define common = {

    # Drop any martian packets
    rule { src zone = mars; } policy log_martian;
    rule { dst zone = mars; } policy log_martian;
    rule { source zone = self; } policy log_allow;

    # Accept router annoucements
    rule { use link_address; #if
           icmp6 = [ router-solicitation-6,
                     router-advertisement-6,
                     neighbor-solicitation-6,
                     neighbor-advertisement-6,
                     redirect-message-6,
                     multicast-listener-query-6,
                     indirect-neighbor-solicit-6,
                     inverse-neighbor-discovery-advertisement-message-6 ];
           hoplimit = 255;
           destination address = [ ip6_multicast, local ];
           destination zone = self;
    } policy log_allow;

    rule { use link_address; #if
           icmp6 = [ multicast-listener-query-6,
                     multicast-listener-report-6,
                     multicast-listener-done-6,
                     multicast-listener-discovery2-6 ];
           destination address = [ ip6_multicast, local ];
           destination zone = self;
           source address = [ link_local ];
    } policy log_allow;

    rule { use link_address; #if
           icmp6 = [ multicast-router-advertisement-6,
                     multicast-router-solicitation-6,
                     multicast-router-termination-6 ];
           hoplimit = 1;
           destination zone = self;
           source address = [ link_local ];
    } policy log_allow;

    rule { state = [ related, established ]; } policy log_allow;

    use validate;
    # Allow router information for link local networks, and Neighbor Discovery (rfc 2461)

    rule {
        state = new;

        rule { icmp4 = [ echo-request ] } policy log_allow;
        rule { icmp6 = [ echo-request-6 ] } policy log_allow;

        rule { destination tcp port = global_tcp_ports; } policy log_allow;
        rule { destination udp port = global_udp_ports; } policy log_allow;
        rule {
            destination zone = self;
            rule { destination tcp port = public_tcp_ports } policy log_allow;
            rule { destination udp port = public_udp_ports } policy log_allow;
        };
        rule {
            use allow_outbound; #if
            destination zone = external;
        } policy allow;

         # Dhcp v6 on external interfaces
	 rule {
             use external_dhcp; #if
             rule {
                ipv6 = [ "udp" ];
                source address = local;
	        destination address = local;
                destination zone = self;
		source udp port = dhcpv6-server;
		destination udp port = dhcpv6-client;
             } policy log_allow;
             rule {
                ipv4 = [ "udp" ];
                destination zone = self;
		source udp port = bootps;
		destination udp port = bootpc;
             } policy log_allow;
         };
    };
}
