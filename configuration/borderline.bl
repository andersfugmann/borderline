# Copyright 2009 Anders Fugmann.
# Distributed under the GNU General Public License v3
#
# This file is part of Borderline - A Firewall Generator
#
# Borderline is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3 as
# published by the Free Software Foundation.
#
# Borderline is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Borderline.  If not, see <http://www.gnu.org/licenses/>.
import "./configuration.bl"
import "./generic"
import "./zones"

# Packets from and to ext must not be a bogon.
process filter {
        rule {
             # Drop any martian packets
             rule { src zone = mars; } policy deny;
             rule { dst zone = mars; } policy deny;

             rule { state = related, established; } policy allow;

             # All bogons from external zones are filtered
             rule { use bogons;
                    src zone = external;
                    source address = bogon;
             } policy drop;

             # All bogons to external zones are filtered
             rule { use bogons;
                    dst zone = external;
                    dst address = bogon;
             } policy drop;


             # Allow roulter information for fe80 networks
             rule { use link_address;
                    src zone != external;
                    dst zone != external;
                    source address = fe80::/64;
                    destination address = fe80::/64;
                    icmptype = router-solicitation, router-advertisement, neighbor-solicitation, neighbor-advertisement, redirect;
             } policy allow;
             rule { state = new;
                    use common;
                    use zones;
             } policy deny;
             rule { state = invalid; } policy drop;
        } policy deny;
} policy deny

