In progress:
* Extend source / destination addresses to be lists.

* Allow ip definitions (Series that will be or'ed)

* Move implementation to .ml and types to .mli - Need to figure out
  how to avoid type definition redundancy.

* Implement negation of filters

Future:

* Setup wiki page for borderline. Maybe use trac for wiki and tickets.

* Extend ip address notation to include '::'

* When parsing the forntend tree create more chains, and avoid
   excessicve use of return statements.

Planning:
* Add ipv4 support - Somehow. Maybe by adding a switch, and by using
  the same framework but disallowing ipv6 constructs. The validation
  pass must validate the all rules to be allowed. Also a mangle filter
  must be present for ipv4 firewalling.

* Define strategy about Mangle and Nat tables. It may require a
  seperate tree, with special validation and optimization passes. It
  will also require cha ins to be locked to a specific table, which it
  is currently not. Table creation could take a parent table and
  inherit the table info.

* Consider using git for development rather than svn.




